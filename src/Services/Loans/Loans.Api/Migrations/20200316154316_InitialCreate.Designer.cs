// <auto-generated />
using System;
using Loans.Api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Loans.Api.Migrations
{
    [DbContext(typeof(LoansContext))]
    [Migration("20200316154316_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.loan_details_hilo", "'loan_details_hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.loan_transactions_hilo", "'loan_transactions_hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.loan_types_hilo", "'loan_types_hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Loans.Api.Models.LoanDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "loan_details_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<decimal>("LoanAmount");

                    b.Property<string>("LoanBranch")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LoanHolder")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("LoanTypeId");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.HasIndex("LoanTypeId");

                    b.ToTable("LoanDetails");
                });

            modelBuilder.Entity("Loans.Api.Models.LoanTransactions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "loan_transactions_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<int>("LoanId");

                    b.Property<decimal>("TransactionAmount");

                    b.Property<DateTime>("TransactionDate");

                    b.Property<string>("TransactionType")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("LoanId");

                    b.ToTable("LoanTransactions");
                });

            modelBuilder.Entity("Loans.Api.Models.LoanTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "loan_types_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("LoanTypes");
                });

            modelBuilder.Entity("Loans.Api.Models.LoanDetails", b =>
                {
                    b.HasOne("Loans.Api.Models.LoanTypes", "LoanTypes")
                        .WithMany()
                        .HasForeignKey("LoanTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Loans.Api.Models.LoanTransactions", b =>
                {
                    b.HasOne("Loans.Api.Models.LoanDetails", "LoanDetails")
                        .WithMany()
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
